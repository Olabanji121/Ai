import React,{useState, useEffect} from 'react'
import {Loader, Card, FormField} from '../components'



const Home = () => {
const [loading, setLoading] = useState(false)
const [allPosts, setAllPosts] = useState(null)
const [searchText, setSearchText] = useState('')
const [searchResults, setSearchResult] = useState(null)
const [searchTimout, setSearchTimout] = useState(null)

useEffect(() => {

  const fetchPost = async ()=>{

    setLoading(true)

    try {
      const response  = await fetch(`http://localhost:8080/api/v1/post`, {
        method: 'GET',
        headers:{
          'Content-Type': 'application/json'
        },
      })

      if(response.ok){
        const result =await response.json()

        setAllPosts(result.data.reverse())
      }


    } catch (error) {
      alert(error)

    } finally{
      setLoading(false)
    }

  }
  fetchPost()

}, [])


const handleSearchChange = (e)=>{

  clearTimeout(searchTimout)

  setSearchText(e.target.value)

  setSearchTimout(
    setTimeout(() => {
      const searchResults = allPosts.filter((item)=> item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))
      setSearchResult(searchResults)
    },500 ))




}


const RenderCards =({data, title})=>{
  if(data?.length> 0){
    return data.map((post)=> <Card key={post._id} {...post}/>)
  }

  return(
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>
{title}
    </h2>
  )
}


  return (
    <section  className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px] font-Lato'>
The Comunity Showcase
        </h1>
        <p className='mt-2 text-[#666e75] text=[16px max-w-[500px]] font-Lato'>
          Browse through a collection of imaginative and visually stunning images generated by DALL_E AI
        </p>
      </div>
      <div  className='mt-10'>
<FormField handleChange={handleSearchChange} LableName='Search posts' type='text' name='text' placeholder='Search posts' value={searchText} />
      </div>
      <div className='mt-10'>
   {
    loading ? (
      <div>
<Loader/>
      </div>
    ): (<>
    {
      searchText && (
        <h2 className='font-medium text-[#666e75]'>
          Showing result for <span className='text-[#222328]'>{searchText}</span>
        </h2>
      )
    }
    <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1  gap-3'>
    { searchText? (
      <RenderCards
      data={searchResults}
      title='No search results found'
      />
    ): (
      <RenderCards
      data={allPosts}
      title='No posts Found'
      />
    )}
    </div>
    </>)
   }
      </div>


    </section>
  )
}

export default Home